{"version":3,"sources":["components/TodoApp.js","components/TodoItem.js","components/TodoList.js","components/TodosFilter.js","components/Footer.js","App.js","index.js"],"names":["TodoApp","state","title","handleSubmit","event","addNewTodo","_this","props","preventDefault","setState","prevState","completed","id","Date","now","handleChange","value","target","react_default","a","createElement","onSubmit","this","className","placeholder","onChange","React","Component","TodoItem","_ref","todo","onCheck","onRemove","type","checked","htmlFor","onClick","TodoList","todos","map","components_TodoItem","key","TodosFilter","selectedFilter","handleFilter","href","classnames","selected","name","Footer","handleRemoveCompleted","activeTodos","filter","length","completedTodos","style","display","concat","components_TodosFilter","Fragment","App","Object","toConsumableArray","handleToggle","objectSpread","handleToggleAll","every","filterTodos","handleRemove","splice","visibleTodos","components_TodoApp","components_TodoList","components_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.9cb0d5a7.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass TodoApp extends React.Component {\n  state = {\n    title: '',\n  }\n\n  handleSubmit = (event) => {\n    const { addNewTodo } = this.props;\n\n    event.preventDefault();\n\n    this.setState((prevState) => {\n      addNewTodo({\n        title: prevState.title,\n        completed: false,\n        id: Date.now(),\n      });\n\n      return {\n        title: '',\n      };\n    });\n  };\n\n  handleChange = (event) => {\n    const { value } = event.target;\n\n    this.setState({\n      title: value,\n    });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          onChange={this.handleChange}\n          value={this.state.title}\n        />\n      </form>\n    );\n  }\n}\n\nTodoApp.propTypes = {\n  addNewTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoApp;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodoItem = ({ todo, onCheck, onRemove }) => (\n  <li className={todo.completed ? 'completed' : ''}>\n    <div className=\"view\">\n      <input\n        type=\"checkbox\"\n        className=\"toggle\"\n        id={todo.id}\n        onChange={() => onCheck(todo.id)}\n        checked={todo.completed}\n      />\n      {/* eslint-disable-next-line */}\n      <label htmlFor={todo.id}>\n        {todo.title}\n      </label>\n\n      <button\n        type=\"button\"\n        className=\"destroy\"\n        onClick={() => onRemove(todo)}\n      />\n    </div>\n  </li>\n);\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  }).isRequired,\n  onCheck: PropTypes.func.isRequired,\n  onRemove: PropTypes.func.isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport TodoItem from './TodoItem';\n\nconst TodoList = ({ onCheck, todos, onRemove }) => (\n  <ul className=\"todo-list\">\n    {todos.map(todo => (\n      <TodoItem\n        todo={todo}\n        onCheck={onCheck}\n        onRemove={onRemove}\n        key={todo.id}\n      />\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onCheck: PropTypes.func.isRequired,\n  onRemove: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst TodosFilter = ({ selectedFilter, handleFilter }) => (\n  <ul className=\"filters\">\n    <li>\n      <a\n        href=\"#/\"\n        className={classnames({\n          selected: selectedFilter === 'all',\n        })}\n        name=\"all\"\n        onClick={handleFilter}\n      >\n        All\n      </a>\n    </li>\n\n    <li>\n      <a\n        href=\"#/active\"\n        className={classnames({\n          selected: selectedFilter === 'active',\n        })}\n        name=\"active\"\n        onClick={handleFilter}\n      >\n        Active\n      </a>\n    </li>\n\n    <li>\n      <a\n        href=\"#/completed\"\n        className={classnames({\n          selected: selectedFilter === 'completed',\n        })}\n        name=\"completed\"\n        onClick={handleFilter}\n      >\n        Completed\n      </a>\n    </li>\n  </ul>\n);\n\nTodosFilter.propTypes = {\n  selectedFilter: PropTypes.string.isRequired,\n  handleFilter: PropTypes.func.isRequired,\n};\n\nexport default TodosFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport TodosFilter from './TodosFilter';\n\nconst Footer = ({\n  todos,\n  selectedFilter,\n  handleFilter,\n  handleRemoveCompleted,\n}) => {\n  const activeTodos = todos.filter(todo => (!todo.completed)).length;\n  const completedTodos = todos.filter(todo => (todo.completed)).length;\n\n  return (\n    <footer className=\"footer\" style={{ display: 'block' }}>\n      <span className=\"todo-count\">\n        {`${activeTodos} items left`}\n      </span>\n\n      <TodosFilter\n        selectedFilter={selectedFilter}\n        handleFilter={handleFilter}\n      />\n\n      {completedTodos > 0\n        ? (\n          <button\n            type=\"button\"\n            className=\"clear-completed\"\n            style={{ display: 'block' }}\n            onClick={handleRemoveCompleted}\n          >\n            Clear completed\n          </button>\n        ) : (\n          <></>\n        )\n      }\n    </footer>\n  );\n};\n\nFooter.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  selectedFilter: PropTypes.string.isRequired,\n  handleFilter: PropTypes.func.isRequired,\n  handleRemoveCompleted: PropTypes.func.isRequired,\n};\n\nexport default Footer;\n","import React from 'react';\n\nimport TodoApp from './components/TodoApp';\nimport TodoList from './components/TodoList';\nimport Footer from './components/Footer';\n\nclass App extends React.Component {\n  state= {\n    todos: [],\n    selectedFilter: 'all',\n  };\n\n  addNewTodo = (todo) => {\n    this.setState(prevState => ({\n      todos: [...prevState.todos, todo],\n    }));\n  };\n\n  handleToggle = (id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map((todo) => {\n        if (todo.id !== id) {\n          return todo;\n        }\n\n        return {\n          ...todo,\n          completed: !todo.completed,\n        };\n      }),\n    }));\n  };\n\n  handleToggleAll = () => {\n    this.setState((prevState) => {\n      if (prevState.todos.every(todo => todo.completed)) {\n        return {\n          todos: prevState.todos.map(todo => ({\n            ...todo,\n            completed: !todo.completed,\n          })),\n        };\n      }\n\n      return {\n        todos: prevState.todos.map(todo => ({\n          ...todo,\n          completed: true,\n        })),\n      };\n    });\n  };\n\n  handleFilter = (event) => {\n    const { name } = event.target;\n\n    this.setState({ selectedFilter: name });\n  };\n\n  filterTodos = (selectedFilter) => {\n    const { todos } = this.state;\n\n    if (selectedFilter === 'active') {\n      return todos.filter(todo => todo.completed === false);\n    }\n\n    if (selectedFilter === 'completed') {\n      return todos.filter(todo => todo.completed === true);\n    }\n\n    return todos;\n  }\n\n  handleRemove = (todo) => {\n    this.setState((prevState) => {\n      prevState.todos.splice(todo, 1);\n\n      return {\n        todos: prevState.todos,\n      };\n    });\n  };\n\n  handleRemoveCompleted = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => !todo.completed),\n    }));\n  };\n\n  render() {\n    const {\n      selectedFilter,\n    } = this.state;\n\n    const visibleTodos = this.filterTodos(selectedFilter);\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n\n          <TodoApp addNewTodo={this.addNewTodo} />\n        </header>\n\n        <section className=\"main\" style={{ display: 'block' }}>\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            onClick={this.handleToggleAll}\n          />\n          {/* eslint-disable-next-line */}\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n          <TodoList\n            onCheck={this.handleToggle}\n            onRemove={this.handleRemove}\n            todos={visibleTodos}\n          />\n        </section>\n\n        { (visibleTodos.length > 0 || selectedFilter !== 'all')\n          ? (\n            <Footer\n              todos={visibleTodos}\n              selectedFilter={selectedFilter}\n              handleFilter={this.handleFilter}\n              handleRemoveCompleted={this.handleRemoveCompleted}\n            />\n          ) : (\n            <></>\n          )\n        }\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}